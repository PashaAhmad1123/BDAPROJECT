{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactoryforproject1"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"ProjectBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ProjectBlobStorage1'"
		},
		"blobyoutube2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobyoutube2'"
		},
		"inputblob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'inputblob'"
		},
		"outputblob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'outputblob'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProjectBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ProjectBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobyoutube2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobyoutube2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputblob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('inputblob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputblob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('outputblob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_project.csv",
						"container": "synapseprojectfilesystem"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Entry_Number",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Make ",
						"type": "String"
					},
					{
						"name": "BodyType",
						"type": "String"
					},
					{
						"name": "ModelDesignation",
						"type": "String"
					},
					{
						"name": "DateofManufacture",
						"type": "String"
					},
					{
						"name": "EngineNo.",
						"type": "String"
					},
					{
						"name": "VIN",
						"type": "String"
					},
					{
						"name": "NameofPerson",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "Lic",
						"type": "String"
					},
					{
						"name": "DateOfBirth",
						"type": "String"
					},
					{
						"name": "BankName",
						"type": "String"
					},
					{
						"name": "BSBAcc",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProjectBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data1.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProjectBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProjectBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data1.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProjectBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProjectBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data1.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProjectBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProjectBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data1.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Entry_Number",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Make_or_Body_Type",
						"type": "String"
					},
					{
						"name": "Model_Designation",
						"type": "String"
					},
					{
						"name": "Date_of_Manufacture",
						"type": "String"
					},
					{
						"name": "Reg_No.",
						"type": "String"
					},
					{
						"name": "Odometer_Reading",
						"type": "String"
					},
					{
						"name": "Engine_No.",
						"type": "String"
					},
					{
						"name": "VIN_or_Chasis_No.",
						"type": "String"
					},
					{
						"name": "Name_of_Person",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "Lic_or_Id_or_ABN_No.",
						"type": "String"
					},
					{
						"name": "Date_Of_Birth",
						"type": "String"
					},
					{
						"name": "Bank_Name",
						"type": "String"
					},
					{
						"name": "BSB_Acc",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProjectBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProjectBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProjectBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DiabetesTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "outputblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "pregnancies",
						"type": "int",
						"precision": 10
					},
					{
						"name": "plasma_glucose",
						"type": "int",
						"precision": 10
					},
					{
						"name": "blood_pressure",
						"type": "int",
						"precision": 10
					},
					{
						"name": "triceps_skin_thickness",
						"type": "int",
						"precision": 10
					},
					{
						"name": "insulin",
						"type": "int",
						"precision": 10
					},
					{
						"name": "bmi",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "diabetes_pedigree",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "diabetes",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIABETES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/outputblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/diabetesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "inputblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "diabetes.csv",
						"container": "synapseprojectfilesystem"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "pregnancies",
						"type": "String"
					},
					{
						"name": "plasma_glucose",
						"type": "String"
					},
					{
						"name": "blood_pressure",
						"type": "String"
					},
					{
						"name": "triceps_skin_thickness",
						"type": "String"
					},
					{
						"name": "insulin",
						"type": "String"
					},
					{
						"name": "bmi",
						"type": "String"
					},
					{
						"name": "diabetes_pedigree",
						"type": "String"
					},
					{
						"name": "age",
						"type": "String"
					},
					{
						"name": "diabetes",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/inputblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobToSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DiabetesCSVtoSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "pregnancies",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pregnancies",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "plasma_glucose",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plasma_glucose",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "blood_pressure",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "blood_pressure",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "triceps_skin_thickness",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "triceps_skin_thickness",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "insulin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "insulin",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "bmi",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bmi",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "diabetes_pedigree",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "diabetes_pedigree",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "age",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "age",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "diabetes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "diabetes",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "diabetesCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DiabetesTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-06-14T21:34:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/diabetesCSV')]",
				"[concat(variables('factoryId'), '/datasets/DiabetesTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/derivedcolumndemo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Entry_Number as string,",
						"          Date as string,",
						"          {Make } as string,",
						"          BodyType as string,",
						"          ModelDesignation as string,",
						"          DateofManufacture as string,",
						"          {EngineNo.} as string,",
						"          VIN as string,",
						"          NameofPerson as string,",
						"          Address as string,",
						"          Lic as string,",
						"          DateOfBirth as string,",
						"          BankName as string,",
						"          BSBAcc as string,",
						"          Amount as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(Amount = iifNull(Amount, \"600\", Amount)) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          Entry_Number,",
						"          BSBAcc,",
						"          Amount",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"derivedColumn1 select(mapColumn(",
						"          Entry_Number,",
						"          Date,",
						"          {Make },",
						"          BodyType,",
						"          ModelDesignation,",
						"          DateofManufacture,",
						"          {EngineNo.},",
						"          VIN",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['derivedColumn.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1",
						"select2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['8columns.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText7",
								"type": "DatasetReference"
							},
							"name": "InputFromCSV"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText8",
								"type": "DatasetReference"
							},
							"name": "sinkAllDataCSV"
						}
					],
					"transformations": [
						{
							"name": "Transformation"
						},
						{
							"name": "AllDataColumnsCSV"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Entry_Number as string,",
						"          Date as string,",
						"          Make_or_Body_Type as string,",
						"          Model_Designation as string,",
						"          Date_of_Manufacture as string,",
						"          {Reg_No.} as string,",
						"          Odometer_Reading as string,",
						"          {Engine_No.} as string,",
						"          {VIN_or_Chasis_No.} as string,",
						"          Name_of_Person as string,",
						"          Address as string,",
						"          {Lic_or_Id_or_ABN_No.} as string,",
						"          Date_Of_Birth as string,",
						"          Bank_Name as string,",
						"          BSB_Acc as string,",
						"          Amount as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> InputFromCSV",
						"InputFromCSV derive(Amount = iifNull(Amount, \"974.8\", Amount),",
						"          {Lic_or_Id_or_ABN_No.} = iifNull({Lic_or_Id_or_ABN_No.}, \"unknown_0\", {Lic_or_Id_or_ABN_No.}),",
						"          client_key = iifNull(Name_of_Person, \"unknown\", Name_of_Person) +\" \"+ {Lic_or_Id_or_ABN_No.},",
						"          Date = iifNull(Date, \"03/01/2020\", Date),",
						"          Date_of_Manufacture = iifNull(Date_of_Manufacture, \"20\", Date_of_Manufacture),",
						"          Date_key = Date_of_Manufacture + \" \" + Date,",
						"          Vehicle_key = Entry_Number) ~> Transformation",
						"Transformation select(mapColumn(",
						"          Entry_Number,",
						"          Date,",
						"          Make_or_Body_Type,",
						"          Model_Designation,",
						"          Date_of_Manufacture,",
						"          {Reg_No.},",
						"          Odometer_Reading,",
						"          {Engine_No.},",
						"          {VIN_or_Chasis_No.},",
						"          Name_of_Person,",
						"          Address,",
						"          {Lic_or_Id_or_ABN_No.},",
						"          Date_Of_Birth,",
						"          Bank_Name,",
						"          BSB_Acc,",
						"          Amount",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AllDataColumnsCSV",
						"AllDataColumnsCSV sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['allColumnsCSV.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkAllDataCSV"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText7')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BdaProjectPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "inputData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "inputData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"InputFromCSV": {},
									"sinkAllDataCSV": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/inputData')]"
			]
		}
	]
}